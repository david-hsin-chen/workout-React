{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Hsinb\\\\zWebProjects\\\\workout-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hsinb\\\\zWebProjects\\\\workout-React\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nfunction App() {\n  const _useState = useState({\n    workoutType: 'PUSH UP',\n    workoutImage: 'a.jpg',\n    sets: 1,\n    reps: 3\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        workoutRoutine = _useState2[0],\n        setWorkoutRoutine = _useState2[1];\n\n  const workoutData = [{\n    workoutType: 'Push-Up',\n    workoutImage: 'a.jpg',\n    minSets: 1,\n    maxSets: 10,\n    minReps: 1,\n    maxReps: 30\n  }, {\n    workoutType: 'Mountain Climber',\n    workoutImage: 'b.jpg',\n    minSets: 1,\n    maxSets: 10,\n    minReps: 2,\n    maxReps: 40\n  }, {\n    workoutType: 'Sit-Up',\n    workoutImage: 'a.jpg',\n    minSets: 1,\n    maxSets: 10,\n    minReps: 1,\n    maxReps: 30\n  }];\n\n  const newRandom = (max, min) => {\n    return Math.floor(Math.random() * (max - min) + min);\n  };\n\n  const triggerNewSet = () => {\n    const num = workoutData.length;\n    const newNum = Math.floor(Math.random() * Math.floor(num));\n    const newWorkout = workoutData[newNum];\n    const newSets = newRandom(newWorkout.maxSets, newWorkout.minSets);\n    const newReps = newRandom(newWorkout.maxReps, newWorkout.minReps);\n    setWorkoutRoutine({\n      workoutType: newWorkout.workoutType,\n      workoutImage: newWorkout.workoutImage,\n      sets: newSets,\n      reps: newReps\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"outerBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"innerBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"imgDisplay\",\n    alt: workoutRoutine.workoutType,\n    src: workoutRoutine.workoutImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"b\", {\n    className: \"typeDisplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, workoutRoutine.workoutType), React.createElement(\"p\", {\n    className: \"setsDisplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"do \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, workoutRoutine.sets), \" round\"), React.createElement(\"p\", {\n    className: \"repsDisplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"at \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, workoutRoutine.reps), \" times\"), React.createElement(\"button\", {\n    onClick: triggerNewSet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"NEW SET\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Hsinb\\zWebProjects\\workout-React\\src\\App.js"],"names":["React","useState","App","workoutType","workoutImage","sets","reps","workoutRoutine","setWorkoutRoutine","workoutData","minSets","maxSets","minReps","maxReps","newRandom","max","min","Math","floor","random","triggerNewSet","num","length","newNum","newWorkout","newSets","newReps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n\nfunction App() {\n\n  const [workoutRoutine, setWorkoutRoutine] = useState({\n    workoutType: 'PUSH UP',\n    workoutImage: 'a.jpg',\n    sets: 1,\n    reps: 3\n  })\n\n  const workoutData = [\n    {\n      workoutType: 'Push-Up',\n      workoutImage: 'a.jpg',\n      minSets: 1,\n      maxSets: 10,\n      minReps: 1,\n      maxReps: 30\n    },\n    {\n      workoutType: 'Mountain Climber',\n      workoutImage: 'b.jpg',\n      minSets: 1,\n      maxSets: 10,\n      minReps: 2,\n      maxReps: 40\n    },\n    {\n      workoutType: 'Sit-Up',\n      workoutImage: 'a.jpg',\n      minSets: 1,\n      maxSets: 10,\n      minReps: 1,\n      maxReps: 30\n    }\n  ]\n\n  const newRandom=(max,min)=>{\n    return Math.floor(Math.random()*(max-min)+min);\n  }\n\n  const triggerNewSet=()=>{\n      const num = workoutData.length\n      const newNum = Math.floor(Math.random()*Math.floor(num));\n      const newWorkout = workoutData[newNum];\n      const newSets = newRandom(newWorkout.maxSets, newWorkout.minSets);\n      const newReps = newRandom(newWorkout.maxReps, newWorkout.minReps);\n\n      setWorkoutRoutine({\n        workoutType: newWorkout.workoutType,\n        workoutImage: newWorkout.workoutImage,\n        sets: newSets,\n        reps: newReps\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"outerBlock\">\n        <div className=\"innerBlock\">\n          <img className=\"imgDisplay\" alt={workoutRoutine.workoutType} src={workoutRoutine.workoutImage} />\n          <b className=\"typeDisplay\">{workoutRoutine.workoutType}</b>\n          <p className=\"setsDisplay\">do <b>{workoutRoutine.sets}</b> round</p>\n          <p className=\"repsDisplay\">at <b>{workoutRoutine.reps}</b> times</p>\n          <button onClick={triggerNewSet}>NEW SET</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}